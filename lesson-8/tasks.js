'use strict';

if (!("a" in window)) {
    var a = 1; // присвоение не отработает, так как a уже определено
}

alert(a); // выведет function a() body так как определение function a() { ... } поднимется наверх.

var b = function a(x) {
    x && a(--x); // рекурсии не будет если x >= 0 , так как второе выражение выполняется при истинности первого. 
};

alert(a); // выведет function a() body так как определение function a() { ... } поднимется наверх.

function a(x) {
    return x * 2;
}

var a; // поднимится наверх кода

alert(a); // выведет function a() body так как определение function a() { ... } поднимется наверх.

function b(x, y, a) {
    arguments[2] = 10; // присвоение третьему аргументу (a) значения 10. => ОШИБКА!!!
    // на самом деле значение а останется прежнеим.
    alert(a);
}

b(1, 2, 3); // выведет 10. => ОШИБКА!!!
// на самом деле будет вызвана функция определённая через присвоение,
// так как определение function b() { ... } поднимется наверх.
// и var b = function a(x) { ... } произойдет последним во время исполнения кода.

function a() { // поднимется наверх и определит значение 'a'
    alert(this);
}

a.call(null); // null, так как мы передали внтурь функции a() один аргумент this = null